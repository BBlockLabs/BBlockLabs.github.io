"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[990],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>b});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),u=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=u(e.components);return o.createElement(s.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=u(t),m=r,b=c["".concat(s,".").concat(m)]||c[m]||p[m]||a;return t?o.createElement(b,i(i({ref:n},d),{},{components:t})):o.createElement(b,i({ref:n},d))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<a;u++)i[u]=t[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3562:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var o=t(7462),r=(t(7294),t(3905));const a={sidebar_position:2},i="Node Installation",l={unversionedId:"running-a-node/node-installation",id:"running-a-node/node-installation",title:"Node Installation",description:"This guide explains how to install and run an BonusBlock full node.",source:"@site/docs/running-a-node/node-installation.md",sourceDirName:"running-a-node",slug:"/running-a-node/node-installation",permalink:"/docs/running-a-node/node-installation",draft:!1,tags:[],version:"current",lastUpdatedAt:1683624341,formattedLastUpdatedAt:"9 May 2023",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Prerequisites",permalink:"/docs/running-a-node/prerequisites"},next:{title:"Prepare the Account and Keys",permalink:"/docs/running-a-node/set-up-keys"}},s={},u=[{value:"Build <code>bonus-blockd</code> from source",id:"build-bonus-blockd-from-source",level:2},{value:"Clone the repository",id:"clone-the-repository",level:3},{value:"Build <code>bonus-blockd</code>",id:"build-bonus-blockd",level:3},{value:"Initialize the node",id:"initialize-the-node",level:3}],d={toc:u},c="wrapper";function p(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"node-installation"},"Node Installation"),(0,r.kt)("p",null,"This guide explains how to install and run an BonusBlock full node."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If you have already tried running a BonusBlock node before, you may want to remove previous configuration and data, refer to ",(0,r.kt)("a",{parentName:"p",href:"../becoming-a-validator/troubleshooting#cleaning-up"},"Cleaning up"),".")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Before installation make sure that your system meets the hardware requirements and all the required software is installed. See  ",(0,r.kt)("a",{parentName:"p",href:"../running-a-node/prerequisites"},"Prerequisites"),".")),(0,r.kt)("h2",{id:"build-bonus-blockd-from-source"},"Build ",(0,r.kt)("inlineCode",{parentName:"h2"},"bonus-blockd")," from source"),(0,r.kt)("h3",{id:"clone-the-repository"},"Clone the repository"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd $HOME\ngit clone https://github.com/BBlockLabs/BonusBlock-chain\ncd BonusBlock-chain\n")),(0,r.kt)("h3",{id:"build-bonus-blockd"},"Build ",(0,r.kt)("inlineCode",{parentName:"h3"},"bonus-blockd")),(0,r.kt)("p",null,"Build and install the ",(0,r.kt)("inlineCode",{parentName:"p"},"bonus-blockd")," daemon:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"make build\n")),(0,r.kt)("p",null,"Confirm that the installation has been completed by running the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"bonus-blockd --help\n")),(0,r.kt)("h3",{id:"initialize-the-node"},"Initialize the node"),(0,r.kt)("p",null,"Initialize the genesis.json file that is required to establish a network. You will also need to choose a moniker for your node,\nwhich is the name that will appear on the BonusBlock's Testnet ",(0,r.kt)("a",{className:"external",href:"https://explorer-testnet.bonusblock.io/",target:"_blank"},"block explorer")," once you will start validating."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"bonus-blockd init [moniker] --chain-id=[chainid]\n")),(0,r.kt)("p",null,"For example, for the BonusBlock test network and ",(0,r.kt)("inlineCode",{parentName:"p"},"my-cool-moniker")," as a node name use:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"bonus-blockd init my-cool-moniker --chain-id=blocktopia-01\n")))}p.isMDXComponent=!0}}]);